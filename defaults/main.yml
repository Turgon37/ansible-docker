---
# defaults file for docker-server

# Simple placeholder to allow other roles to detect this role
docker_server__role: True

# Enable fact deployment
docker_server__facts: True


## Docker installation
# List of package to remove
docker_server__conflict_packages_names: []
docker_server__required_packages_names: []

# Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
docker_server__edition: 'ce'

# Name of main docker package
docker_server__package_name: 'docker-{{ docker_server__edition }}'

# Base url for all repository urls
docker_server__repository_base_url: 'https://download.docker.com'

# Used only for Debian/Ubuntu. Switch 'stable' to 'edge' if needed.
docker_server__repository_release_channel: stable

# List of available release channels
docker_server__repository_available_release_channels:
  - stable
  - edge
  - test

# Version of docker-compose to download
docker_server__compose_version: 1.18.0

# If true the docker-compose tool will be installed
docker_server__compose_state: present

# Path to the docker-compose tool binary
docker_server__compose_path: /usr/local/bin/docker-compose

# The full url used to get docker-compose
docker_server__compose_url: 'https://github.com/docker/compose/releases/download/{{ docker_server__compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}'

# List of checksum for each docker-compose versions
# to disable checksum feature simply set this value to empty dict
docker_server__compose_source_checksums:
  1.18.0:
    Linux:
      x86_64: sha256:b2f2c3834107f526b1d9cc8d8e0bdd132c6f1495b036a32cbc61b5288d2e2a01

# Docker image to use for host on which docker-compose native tool is not available
docker_server__compose_workaround_image: '{{ docker_server__compose_workaround_images[docker_server__compose_version][ansible_system][ansible_architecture] }}'
# Mapping of dokcer images name for the above setting
docker_server__compose_workaround_images:
  1.18.0:
    Linux:
      armv7l: turgon37/docker-compose:armhf-1.18.0dev

## Docker service
# The name of the systemd docker service
docker_server__service_name: docker

# If true the docker service will be started and enabled
docker_server__service_enabled: True

# If this is set to true, ansible will automatically restart docker daemon on changes
docker_server__service_restartable: True

# Path to the must restart stamp file
docker_server__service_restart_stamp_file: '/var/local/docker-must-restart-stamp'


## Docker configuration
# The main configuration directory
docker_server__config_dir: /etc/docker
# The main configuration file
docker_server__config_file: '{{ docker_server__config_dir }}/daemon.json'
# Path to service's environment variables
#docker_server__config_vars_file:

# Restricted group allowed to access to socket
docker_server__socket_group: docker
# List of users allowed to access docker socket
# SECURITY WARNING:
# Be aware that granted users can easily get full root access on the docker host system!
docker_server__socket_group_users: []

# This host configuration will be used by default for all client tools
docker_server__clients_host: 'unix:///var/run/docker.sock'

# Default list of sockets docker will use
docker_server__hosts_default:
  - '{{ docker_server__clients_host }}'

# Docker sockets intended to be declared at global inventory level
docker_server__hosts_global: []
# Docker sockets intended to be declared at hostgroup inventory level
docker_server__hosts_group: []
# Docker sockets intended to be declared at host inventory level
docker_server__hosts_host: []

# Final set of listen sockets
docker_server__hosts: '{{ docker_server__hosts_default
  |union(docker_server__hosts_global)
  |union(docker_server__hosts_group)
  |union(docker_server__hosts_host)
  |unique|list }}'

# Default options provided by the role
docker_server__config_default:
  hosts: '{{ docker_server__hosts }}'
  icc: True
  iptables: True
  ip-forward: True
  ip-masq: True
  log-level: info
  log-driver: json-file
  log-opts:
    max-file: "5"
    max-size: "10m"

# Docker options intended to be used at global inventory level
docker_server__config_global: {}
# Docker options intended to be used at hostgroup inventory level
docker_server__config_group: {}
# Docker options intended to be used at host inventory level
docker_server__config_host: {}

# Final dict of options
docker_server__config_options: '{{ docker_server__config_default
  |combine(docker_server__config_global)
  |combine(docker_server__config_group)
  |combine(docker_server__config_host) }}'



# The base directory of docker data
docker_server__directory: /var/lib/docker




# List of GPG keys to add
docker_server__gpg_keys:
  Debian:
    - id:  9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      url: '{{ docker_server__repository_base_url }}/linux/ubuntu/gpg'
  Raspbian:
    - id:  9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      url: '{{ docker_server__repository_base_url }}/linux/raspbian/gpg'
  CentOS:
    - url: '{{ docker_server__repository_base_url }}/linux/centos/gpg'
