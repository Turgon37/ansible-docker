---
- name: Install required tools
  become: yes
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common
  tags: ['docker']

- name: Check if docker repository is installed
  register: docker_aptconf
  check_mode: no
  stat:
    path: "{{ docker__apt_list_file }}"
  tags: ['docker']

- name: Add docker repository GPG key to keyring
  become: true
  shell: >
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
  when: not docker_aptconf.stat.exists

- name: Add docker repository for ARM
  become: true
  shell: >
    echo "deb [arch=armhf] https://download.docker.com/linux/debian \
         $(lsb_release -cs) stable" | \
        tee {{ docker__apt_list_file }}
  when: ansible_machine == "armv7l" and not docker_aptconf.stat.exists

- name: Check if docker repository is installed
  register: docker_aptconf
  check_mode: no
  stat:
    path: "{{ docker__apt_list_file }}"
  tags: ['docker']

- name: Assert that docker repository exists
  assert:
    that:
      - "docker_aptconf.stat.exists"
  tags: ['docker']

# - name: Install docker engine from web script
#   become: true
#   shell: >
#     curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
#     curl -sSL "https://get.docker.com" | sh
#   when: not docker_aptconf.stat.exists
#   tags: ['docker']

- name: Install the latest version of docker engine
  become: yes
  apt:
    name: '{{ item }}'
    cache_valid_time: 3600
    state: latest
  with_items:
    - '{{ docker__packages_name }}'
  when: docker_aptconf.stat.exists
  tags: ['docker']
